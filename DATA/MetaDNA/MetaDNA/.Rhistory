load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
names(lib.pos)
x <- lib.pos[[1]]
names(x)
x$metainfo
x$precursor_mz
x$spectra[[1]]
sapply(lib.pos, function(x) x$metainfo$name)
sapply(lib.pos, function(x) x$metainfo$name) %=>% as.vector
as.vector(sapply(lib.pos, function(x) x$metainfo$name) )
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
names(lib.pos)
lib.pos[[1]]
lib.pos[[2]]
lib.pos[[200]]
lib.pos[[205]]
lib.pos[[205]]$spectra
lib.pos[[205]]$precursor_mz
sapply(lib.pos, function(e) nrow(e$precursor_mz))
as.vector(sapply(lib.pos, function(e) nrow(e$precursor_mz)) )
n <- as.vector(sapply(lib.pos, function(e) nrow(e$precursor_mz)) )
n >= 1000
which(n >= 1000)
which(n >= 100)
which(n >= 50)
which(n >= 80)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 100)
lib.neg[[6303]]
lib.neg[[6303]]$precursor_mz
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 100)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 90)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 80)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 60)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 70)
lib.neg[[530]]$precursor_mz
lib.neg[[531]]$precursor_mz
lib.neg[[532]]$precursor_mz
lib.neg[[539]]$precursor_mz
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/KEGG.metaDNA.rda")
View(KEGG.metaDNA)
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/KEGG.metaDNA.rda")
load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
x <- lib.pos[[1]]
x <- x[[1]]
x
x <- lib.pos[[1]]
names(x)
x$precursor_mz
x$metainfo
load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
x <- lib.pos[[1]]
x$metainfo
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3+_standards-build.rda")
View(meta.db)
View(raw.pos)
View(raw.pos[["smartnucl-T3_POS_1_665raw.pos866-[M+H]+"]])
raw.pos[["smartnucl-T3_POS_1_665raw.pos866-[M+H]+"]]
raw.pos[[1]]
colnames(meta.db)
help("write.csv")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
View(raw.neg)
raw.neg[[1]]
View(meta.db)
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
names(raw.neg)
names(raw.neg)[1000:length(raw.neg)]
raw.neg[[1300]]
raw.neg[[1200]]
raw.neg[[1100]]
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/sn_T3.rda")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/sn_T3.rda")
lib.pos[[1]]
names(lib.pos)
length(lib.pos)
load("D:/Database/CID-Synonym-filtered/names/sn_T3.rda")
length(lib.pos)
names(lib.pos)
lib.pos[[1]]
lib.pos[[10]]
lib.pos[[10]]$metainfo
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
length(lib.pos[[1]]$spectra)
names(lib.pos[[1]]$spectra)
names(lib.pos[[2]]$spectra)
names(lib.pos[[200]]$spectra)
names(lib.pos[[200]]$spectra[[1]])
sapply(lib.pos[[200]]$spectra, function(s) s$platform)
sapply(lib.pos[[200]]$spectra, function(s) s$platform) %=>% as.vector
require(VisualBasic.R)
sapply(lib.pos[[200]]$spectra, function(s) s$platform) %=>% as.vector
