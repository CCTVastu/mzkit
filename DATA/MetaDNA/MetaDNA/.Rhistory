setwd("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/R")
require(VisualBasic.R)
flash_load()
mass = 111
mode = 1
mz.calculator(mass, mode);
traceback()
debug = FALSE
calc <- NA;
if (mode[1] == 1) {
calc <- positive();
} else {
calc <- negative();
}
out <- c();
if (debug) {
print(names(calc));
}
calc
for (name in names(calc)) {
type <- calc[[name]];
cal <- type$calc.mz;
if (debug) {
print(type);
print(cal);
}
r <- c(type$Name,
type$charge,
type$M,
type$adduct,
cal(mass)
);
out <- rbind(out, r);
}
name = names(calc)[1]
name
type <- calc[[name]];
cal <- type$calc.mz;
cal
type
type <- calc[[name]];
cal <- type$cal.mz;
cal
if (debug) {
print(type);
print(cal);
}
r <- c(type$Name,
type$charge,
type$M,
type$adduct,
cal(mass)
);
r
library(MetaDNA)
mz.calculator(mass, mode);
is.null
library(MetaDNA)
help(primitiveTypes)
setwd("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test")
ions <- "./small_mgf.txt" %=>% read.mgf
ions
ion <- ions[[1]]
ion
flash_load("../R")
mgf.ion
mgf.ion(ion$mz1, ion$rt, ion$ms2, 1, ion$title, ion$ms1.into)
ion
ions[[1]] %=>% mgf.ion
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
mz.calculator(853.33089, 1)
library(MetaDNA)
mz.calculator(853.33089, 1)
mz.calculator(922.798941124, 1)
mz.calculator(922.798941124, -1)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
library(MetaDNA)
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test/test_metaDNA.rda")
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test/GABA.rda")
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test/GABA.rda")
View(meta.db)
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test/GABA.rda")
View(meta.db)
colnames(meta.db)
names(lib.pos)
names(lib.pos[[1]])
is.function(function(x) x)
is.function(1)
library(MetaDNA)
setwd("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/test")
xLoad("./GABA.rda");
meta.db[, "mz"] <- meta.db[, "precursor_m/z"];
meta.db
meta.db[, "precursor_m/z"]
meta.db[, "mz"] <- meta.db[, "precursor_m/z"] %=>% as.numeric;
is.data.frame(meta.db)
as.data.frame(meta.db)
data.frame();
.as.matrix()
.as.matrix
as.dataframe
xLoad("./GABA.rda");
meta.db[, "mz"] <- meta.db[, "precursor_m/z"] %=>% as.numeric;
meta.db
meta.db <- as.data.frame(meta.db)
meta.db
meta.db[, "mz"] <- meta.db[, "precursor_m/z"] %=>% as.numeric;
meta.db
lib.pos
names(lib.pos)
libname <- "GABA-21#111-[M+H]+"
peaks <- lib.pos[[libname]];
peaks
(peaks %=>% IsNothing)
peaks[, "mz"] <- peaks[, "PrecursorMz"]
peaks
ms2 <- function(libname) {
peaks <- lib.pos[[libname]];
if (peaks %=>% IsNothing) {
peaks <- lib.neg[[libname]];
}
if (peaks %=>% IsNothing) {
return(NULL);
}
peaks[, "mz"]   <- peaks[, "ProductMz"];
peaks[, "into"] <- peaks[, "LibraryIntensity"];
peaks;
}
write.mgf(meta.db, ms2, "./GABA.mgf");
require(VisualBasic.R)
Println
Println
require(VisualBasic.R)
Println
require(VisualBasic.R)
Println
library(MetaDNA)
source("./test_mgf_writer.R")
library(MetaDNA)
source("./test_mgf_writer.R")
library(MetaDNA)
source("./test_mgf_writer.R")
library(MetaDNA)
source("./test_mgf_writer.R")
setwd("D:/smartnucl_integrative/biodeep_xcms/biodeepMSMS/internal/modules/mzXML-web/test")
require(MetaDNA);
xLoad("./GABA.rda");
meta.db         <- as.data.frame(meta.db);
source('D:/smartnucl_integrative/biodeep_xcms/biodeepMSMS/internal/modules/mzXML-web/test/create_mgf.R')
sqrt(1.25)
log(1.25, 2)
log(-1.25, 2)
log(1/1.25, 2)
1/1.25
install.packages("D:/biodeep/VisualBasic.R_1.0.124.tar.gz", repos = NULL, type = "source")
library(MetaDNA)
p <- positive()
p
p$"M+3H"$cal.mz(853.33089)
p$"M+3H"$calc(876.32)
reverse.mass <- function(precursorMZ, M, charge, adduct) {
(precursorMZ * abs(charge) - adduct) / M;
}
reverse.mass(876.32, 1, 3, 3)
p$"M+3H"$calc(285.4509)
p$"M+3H"$calc(876.32)
p$"M+3H"$cal.mz(876.32)
p$"M+3Na"$cal.mz(853.33089)
p$"M+H+K"$cal.mz(853.33089)
p$"2M+K"$cal.mz(853.33089)
p$"2M+H"$cal.mz(853.33089)
n <- negative()
n$"M-3H"$cal.mz(853.33089)
n$"M-2H"$cal.mz(853.33089)
n$"3M-H"$cal.mz(853.33089)
n$"2M+FA-H"$cal.mz(853.33089)
library(MetaDNA)
library(MetaDNA)
