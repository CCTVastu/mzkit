<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA8
        CQAAAk1TRnQBSQFMAwEBAAEIAQABCAEAASABAAEgAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABGAYAATD/AJwAAcoByQHG/wB7AAFwAWsBYwFhAVsBUwF7AXABX/8AeAABygHJAcYBpQGc
        AY4BfAFxAWEBewFwAV//AHgAAYsBgQFxAaUBnAGOAXwBcQFhAXsBcAFf/wB4AAGLAYEBcQGlAZwBjgF8
        AXEBYQF7AXABX/8AeAABlQGOAYABpQGcAY4BfAFxAWEBewFwAV//AHgAAZUBjgGAAaUBnAGOAXwBcQFh
        AXsBcAFf/wB4AAGVAY4BgAGlAZwBjgF8AXEBYQF7AXABX/8AeAABlQGOAYABpQGcAY4BfAFxAWEBewFw
        AV//AHgAAZUBjgGAAaUBnAGOAVkBUwFKAXcBdQFxDwABxAG9AbQBzAHFAbwBzAHFAbwBzAHFAbwBxgHC
        Abz/AFoAAWkBZQFcAdcB0AHGAYUBgQF7AXcBdQFxAwAB4gHgAd4BzAHFAbwBjgGJAXUB9QHyAe0B9gHz
        Ae4B9gHzAe8B9wH2AfMB7wHtAekBzAHFAbwBzAHFAbz/AFoAAdcB0AHGAYUBgQF7AcwBxQG8AZgBkgGA
        AfUB7wHoAfYB8QHrAfYB8gHtAfcB8wHvAfcB9QHxAfgB9gHzAfkB9wH0AfkB9wH1AfkB+AH3AcwBxQG8
        /wBaAAHNAcYBvAHIAb8BrwH1Ae0B4wH1Ae8B5gH1AfAB6AH2AfEB6gH2AfIB7AH3AfMB7gH3AfQB8AH4
        AfUB8gH4AfYB9AH5AfcB9QH3AfUB8wHMAcUBvP8AVAABxgHCAbsBhQGAAWsB9AHrAd0B9AHsAeAB9QHt
        AeMB9QHvAeUB9QHwAecB9gHxAeoB9gHyAewB9wHzAe4B9wH0AfAB9wH1AfEB+AH2AfMB+QH3AfUB9wH2
        AfMBzAHFAbz/AFEAAc8ByAG/AfIB5gHWAfQB6QHaAfQB6wHeAfUB7AHfAfUB7QHiAfUB7gHlAfUB7wHn
        AfYB8AHpAfYB8gHrAfYB8wHtAfcB9AHvAfcB9QHxAfgB9gHzAfkB9wH1AdQB0AHHAbYBrgGm/wBLAAHs
        AesB6gGgAZcBgwHzAecB1AH0AegB1wH0AekB2QH0AeoB3AH0AesB3wH1Ae0B4gH1Ae4B5AH1Ae8B5gH1
        AfAB6AH2AfEB6gH2AfIB7QH3AfMB7wH3AfQB8AH4AfUB8gH2AfQB8QHMAcUBvP8ASwAB0gHLAcIB5gHW
        AcIB9AHmAdEB8wHnAdQB9AHoAdYB9AHpAdkB9AHqAdwB9AHrAd4B9AHsAeEB9QHtAeMB9QHvAeUB9QHw
        AegB9gHxAeoB9gHyAewB9gHzAe4B9wH0AfAB+AH1AfIBzAHFAbz/AEsAAdMBzAHDAe0B3AHHAfQB5QHO
        AfMB5gHQAfQB5gHTAfMB5wHVAfQB6AHYAfQB6gHbAfQB6wHdAfQB7AHgAfUB7QHjAfUB7gHlAfUB8AHn
        AfYB8QHpAfYB8gHsAfcB8wHuAfcB9AHwAYABewFl/wBLAAHUAc0BwwHvAd8ByAH1AeQBzQH0AeQBzgH0
        AeUB0AH0AeYB0gHzAecB1QH0AegB1wH0AekB2gH0AeoB3QH1AewB3wH1Ae0B4gH1Ae4B5AH1Ae8B5wH2
        AfAB6QH2AfEB6wH2AfMB7QG3AbIBo/8ASwAB1QHOAcQB6wHbAcYB9QHlAcwB9QHlAc0B9AHkAc0B9AHl
        Ac8B8wHlAdIB9AHnAdQB9AHoAdYB9AHpAdkB9AHqAdwB9AHrAd4B9QHsAeEB9QHuAeQB9QHvAeYB9QHw
        AegB9gHxAeoBigGEAXD/AEsAAdUBzgHEAeIB0AG4AfcB5wHOAfYB5AHMAfUB5QHNAfQB5AHNAfQB5QHO
        AfQB5gHRAfMB5gHTAfQB6AHWAfQB6AHZAfQB6gHbAfQB6wHeAfQB7AHhAfUB7QHjAfUB7wHlAfUB8AHo
        AcwBxQG8/wBOAAGbAZUBgwH4AecB0AH3AeYBzQH2AeUBzAH1AeMBywH0AeMBzQH0AeUBzgH0AeUB0AH0
        AeYB0gH0AecB1QH0AegB2AH0AeoB2wH0AesB3gH1AewB4AH1Ae0B4gH0Ae0B4wHMAcUBvP8ATgAB1wHQ
        AcYB6wHfAc0B+AHoAdAB9gHlAc0B9QHkAcsB9QHkAcwB9QHkAc0B9AHlAc4B8wHkAdAB9AHmAdIB8wHn
        AdUB9AHoAdcB9AHpAdoB9AHqAd0B9AHrAd8BjgGJAXUC8gHx/wBRAAHXAdABxgHzAeUBzwH4AecB0AH3
        AeUBzgH2AeQBzAH1AeQBzAH0AeMBywH0AeQBzQH0AeUBzwHzAeYB0QH0AecB1AH0AecB1gH0AekB2QHt
        AeMB1QHMAcUBvP8AVAABxQG/AbYBxwHAAbQB8QHkAc8B+AHoAdEB9wHmAc4B9gHkAcsB9QHjAcsB9QHk
        AcsB9AHkAcwB9AHkAc4B9AHlAdAB9AHmAdMB6wHdAswBxQG8/wBaAAHRAc0ByAHXAdABxgHiAc8BtQH3
        AeYBzwH3AecBzgH2AeUBywH2AeQBywH1AeQBywH0AeQBywHyAeEBywGFAYABawHNAcYBvf8AYwAB1wHQ
        AcYB1gHPAcUBgAF7AWUB2wHFAaUB2wHGAakBwAGyAZoBzAHFAbsB0AHJAcAB0gHOAcn/AG8AAdQB0QHL
        AcEBuwGyAfAB7wHu/wD/AP8A/wD/AMMAAUIBTQE+BwABPgMAASgDAAGAAwABIAMAAQEBAAEBBgABAhYA
        A/8BAAT/DAAB7wP/DAABxwP/DAABwwP/DAAB4QP/DAAB8AP/DAAB+AF/Av8MAAH8AT8C/wwAAf4BHwL/
        DAAB/wEPAv8MAAH/AYcBwQH/DAAB/wHCAQABfwwAAf8B8AEAAT8MAAH/AfgBAAEfDAAB/wHwAQABDwwA
        Af8B8AEAAQcMAAH/AeABAAEHDAAB/wHgAQABBwwAAf8B4AEAAQcMAAH/AeABAAEHDAAB/wHgAQABBwwA
        Af8B4AEAAQcMAAH/AfABAAEHDAAB/wHwAQABBwwAAf8B+AEAAQ8MAAH/AfgBAAEfDAAB/wH8AQABPwwA
        Av8BAAF/DAAC/wHjAf8MAAT/DAAE/wwABP8MAAs=
</value>
  </data>
</root>