<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADk
        BQAAAk1TRnQBSQFMAwEBAAEYAQABGAEAARgBAAEYAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABYAMA
        ARgDAAEBAQABGAYAARsYAAL1AfT/ABsAA/ABlgGRAY0BugG1Aa7/ABgAA+8BsQGrAaEBfAFxAWEBugG2
        Aa7/ABgAAd4B3AHZAZwBkwGEAYUBewFqAcsBxwHC/wAYAAHpAegB5gGZAZEBgwGFAXoBawG6AbUBrf8A
        GAAC6QHnAaABlwGJAXwBcQFhAboBtgGu/wAYAAHgAd4B2wGfAZcBiQGFAXsBagHLAccBwv8AGAAB6gHp
        AegBmQGRAYMBdgFtAWECtwG1CQAD9AHdAdoB1gHeAdwB2AHeAdsB2AH1AvT/AAHlAeQB4wGxAasBoQGF
        AYEBewK4AbYB6AHnAeYBzAHFAbwBsAGsAZ0B9gHzAe4B9gHzAe8B9AHzAfAB2AHSAcsBzAHFAbwD//8A
        AeMB4AHcAawBpwGeAb0BtwGpAfUB7wHnAfYB8QHrAfcB8wHtAfcB9AHwAfgB9QHyAfkB9wH0AfkB+AH2
        AeAB3QHXA/r8AAHcAdoB1gG1Aa8BngHvAecB2wH1Ae4B5AH1Ae8B5wH2AfEB6gH2AfIB7QH3AfMB8AH3
        AfUB8gH4AfYB9AHzAfEB7gHgAdwB1wP/9gAD/wHOAccBvgHzAecB1wH0AeoB3QH1AewB3wH1Ae0B4wH1
        Ae8B5gH2AfAB6QH2AfIB7AH3AfQB7gH3AfUB8QH4AfYB9AHgAd0B1gG2Aa4BpvYAAegB5wHmAbgBrAGY
        AfMB5wHUAfQB6QHXAfQB6gHbAfQB6wHfAfUB7QHiAfUB7gHlAfUB8AHoAfYB8gHrAfcB8wHuAfcB9AHw
        AfcB9AHxAcwBxQG89gAB4gHfAdsB6wHaAcUB9AHlAdAB9AHnAdMB8wHoAdYB9AHpAdoB9AHrAd0B9AHs
        AeEB9QHuAeUB9QHwAecB9gHxAeoB9gHyAe4B9wH0AfABmQGUAYP2AAHjAd8B2wHvAd8ByAH1AeQBzQH0
        AeUBzwH0AeYB0gHzAecB1gH0AekB2QH0AeoB3QH1AewB4AH1Ae4B4wH1Ae8B5wH2AfAB6gH2AfIB7AG3
        AbIBo/YAAeMB4AHbAegB1wHBAfYB5QHMAfQB5AHNAfQB5QHOAfMB5gHSAfQB5wHUAfQB6QHYAfQB6gHc
        AfUB7AHfAfUB7QHjAfUB7wHmAfYB8QHoAaABmgGK9gAB9gL1AbIBqAGUAfgB5wHOAfYB5QHMAfUB4wHM
        AfQB5AHOAfQB5QHQAfQB5wHTAfQB6AHXAfQB6gHbAfQB6wHfAfUB7QHiAfQB7gHkAcwBxQG8+QAB1gHP
        AcUB7wHiAc4B9wHmAc4B9QHkAcsB9QHkAcwB9AHlAc4B8wHkAdAB9AHmAdMB9AHoAdYB9AHpAdoB9AHq
        Ad4BsAGqAZkC8QHw/AAB1wHPAcIB8AHhAc0B9wHmAc8B9gHkAcwB9AHjAcsB9AHkAcwB9AHlAc8B9AHm
        AdIB9AHnAdUB7AHhAdIB3gHaAdMD//wAAeQB4gHfAdoB0gHHAekB1wG+AfcB5gHOAfYB5QHMAfYB5AHL
        AfUB5AHMAfMB4wHMAaoBogGOAd4B2AHSA/r/AAYAAdYBzwHFAbgBsgGkAbwBrAGQAdsBxgGpAcQBuAGl
        Ac4BxwG9AdEBzQHI/wASAAHsAesB6gHaAdcB0wPx/wD/AP8AMAABQgFNAT4HAAE+AwABKAMAAWADAAEY
        AwABAQEAAQEFAAEgAQEWAAP/AQAB3wL/CQABjwL/CQABhwL/CQABwwL/CQAB4QL/CQAB8AL/CQAB+AF/
        Af8JAAH8ATgBPwkAAf4BAAEPCQAB/wGAAQcJAAH/AYABAwkAAf8BAAEDCQAB/wEAAQMJAAH/AQABAwkA
        Af8BAAEDCQAB/wEAAQMJAAH/AQABAwkAAf8BgAEDCQAB/wHAAQMJAAH/AcABBwkAAf8B8AEfCQAB/wH8
        AX8JAAP/CQAD/wkACw==
</value>
  </data>
</root>