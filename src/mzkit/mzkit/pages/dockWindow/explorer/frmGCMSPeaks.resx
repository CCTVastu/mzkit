<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        CwAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABFAEAARQBAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEYBQABwAESFQAD/QP4A/UD/gP7AfEB5QHVAfEB4AHKAfgB8QHoCf4D/AHvAeYB3QHo
        AdkByQL0AfMD/AP+A/MD+AkAA/QD7gbrA+oG6QPoBucG5gnlA+gD93sAA/gD/AHKAe0B+wGrAeUB/AGj
        AdYB6QHOAYUBJwHRAXoBCwG2AbIBkAGqAeIB+AGrAeUB/AGrAeUB/AG4As4BtgF5AT4BpgFWAQkBxAGj
        AYEBqAHfAfQBqwHlAfwB2wHyAfsD/gkAA/QD7wPsBusB2gHUAdUB4QLeAdwB1wHYAeYB5AHlAdoB1QHW
        AeUC5AnmA+UD6AP3ewAD+AP3AYMB2AH4ATsByAH+ATQBrgHdAdIBdwEDAdIBdwEDAXMBmQGGAToBwwH4
        ATsByQH/ATsByAH+AWUCmAGkAVMBAgGkAVMBAgGkAVMBAgE4Ab0B8AE7AckB/wGqAeMB+QP8CQAD9APx
        A+4ByQG+Ab8B4wHgAeEByQG+Ab8BwAGxAbMBtQGjAaUB4wLgAdYC0APmBugD5gPnA+oD93sAA/gB9QL2
        AYcB2QH3AUUBywH+ATwBsQHdAdEBdwEDAdEBdwEDAXgBmgGFAUIBxAH2AUQBygH9AUQByQH8AWoBmQGW
        AaQBVAECAaQBVAECAaQBVAECAUEBwAHwAUUBzAH/Aa0B4wH4A/wJAAP0A/ED7gHiAd4B3wHrAuoB5wLl
        AeEB3QLeAdoB2wPqAekC6AnqBukD6gP3ewAD+AH1AvYBjQHaAfcBTgHNAf4BRAGzAd0B0QF3AQMB0QF3
        AQMBdwGMAXMBPwGkAcsBQQGoAc8BQQGoAc8BZwGGAX0BowFVAQMBowFVAQMBowFVAQMBSgHCAfABTgHO
        Af8BsQHkAfgD/AMABv8D9APyA+8J7gHbAtUG7QHeAdkB2gHdAdgB2QPrAbQBowGlAdgB0QHTA+oD7AP3
        ewAD+AH1AvYBkgHbAfcBVgHPAf4BSwG1Ad0B0AF2AQMB0QF4AQUB0AGGARgB0AGOASEB0AGOASEB0AGO
        ASEB0AGOASEBuwFzARIBpQFXAQQBowFVAQMBUQHEAfABVgHQAf8BtAHlAfgD/AMAAdUBzQHGAdQBywHE
        AdQBygHEAdUBzAHEAdUBzAHEAdQByQHDAdIByAHCAdEBxQG/AdABxQG/AdEBxwHAAcgBvQG4AbQBpQGn
        Ad8C2wPsAb8BsgGzAd4C2gPrA+wD93sAA/gB9QL2AZYB3QH3AV0B0gH+AVMBuwHhAdEBeAEFAdcBhgET
        AdoBjgEdAdoBjgEdAdoBjgEdAdoBjgEdAdoBjgEdAdoBjgEdAcEBdAEQAaMBVgEDAVkByAHyAV0B0wH/
        AbcB5gH4A/wDAAHuAe0B7AHmAeQB4gHmAeQB4gHuAe0B7AHuAe0B7AHuAe0B7AHuAe0B7AHuAe0B7AHv
        Ae4B7QHuAe0B7AHkAeIB4QHQAcoBywHkAuEB6gLpCewD7QP3ewAD+AP2AZoB3gH3AWQB1QH+AWABywHy
        AY0BqQGSAZEBrwGYAZEBrwGYAZEBrwGYAZEBrwGYAZEBrwGYAZEBrwGYAZEBrwGYAZEBsAGYAXsBnAGS
        AWIB0AH5AWQB1QH+AbkB5wH3A/wDAAPrAeUB4wHiAeUB4wHiBesB6gHtAuwD8APrA/MD6wHiAuAB0QHL
        AcwB5QLiAesC6gnuA+8D93sAA/gD9gGeAd8B9wFpAdcB/gFpAdYB/QFoAdQB+wFoAdMB+gFoAdMB+gFo
        AdMB+gFoAdMB+gFoAdMB+gFoAdMB+gFoAdMB+gFoAdQB+gFoAdQB+wFpAdYB/gFpAdcB/gG8AegB9wP8
        AwAB6gHoAecB5AHgAd4B5AHgAd4B6gHoAecB6gHoAecB6wHpAegB7AHqAekB6gHoAecB7QHsAesB6gHo
        AecB2wLWAcABtgG3A/AD7wGzAaEBowbuA/AD93sAA/gD9gGgAeAB9wFuAdgB/gFuAdgB/gFuAdgB/gFu
        AdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFuAdgB/gFu
        AdgB/gG9AegB9wP8AwAD/AHwAe4B7QHwAe4B7Qb8A/sC+AH5A/wD+QP8AecC4wG4AasBrQHOAcMBxAHR
        AccByAPxAecC5QPvA/ED93sAA/gC9wH4AaMB4QH3AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9
        AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9AXIB2QH9Ab8B6QH3
        A/wDAAK+AboBywHJAcYBywHJAccCvgG6Ar0BugLKAccC4wHhAr4BugHuAe8B7gK+AboBxQHEAcED5gbz
        A/ID8QPwA/ED93sAA/gC+QH3AbsB1gHIAZYBxQGwAXUBogGoAYkBtgGyAZUBwAG9AY8BtAG7AY0BtAG/
        AXQB2QH9AXQB2QH9AXQB2QH9AXQB2QH9AXQB2QH9AXQB2QH9AXQB2QH9AXQB2QH9AcAB6QH3A/wDAAH0
        AfMB8gHqAegB5gHqAegB5gH0AfMB8gH0AfMB8gHzBPIB8QH0AfMB8gHzAfIB8QH0AfMB8gHoAeYB5QHE
        AboBuwHnAeMB5Ab0Ad4B2AHZA/MD9AP3ewAD/AHwAekB1wHYAbgBXgHLAaoBPgGrAYgBNgG+AZkBRwHJ
        AZ8BWQHCAZIBYAG/AY0BbAGrAaoBogF2AdoB/AF2AdoB/AF2AdoB/AF2AdoB/AF2AdoB/AF2AdoB/AF2
        AdoB/AHDAewB+gP9AwAB2QHXAdYB2gHXAdUB2gHXAdUB2QHXAdYB2QHXAdUB3wHdAdsB6QHnAeYB2QHX
        AdYB7wLtAdkB1wHWAdUB0QHQAckBwAHBAegB5AHlBvYB4QHbAdwJ934AAfEB6gHZAdgBsgFIAc0BrAE/
        Ac0BrAE/Ac4BtQFeAdIB2QHRAc4BtwGQAcoBnAFsAeEBlwFoAc8BwgGQAc8BwAGUAcABtQGWAX4BjAGN
        AW4BggGJAXABgwGGAWwBgAGHAcMBywHOA/UDAAGsAYEBZgGyAYUBaQG2AYkBbQG5AYwBcAG/AZIBdQHG
        AZgBewHPAaEBgwHPAaABgQHZAasBigHVAaYBhgHSAaoBkQHXAtMD+Ab5A/oD+QPzA/eBAAGdAdQB5wGj
        AakBYAHMAawBQQHNAa0BQQHQAcQBhwHPAb8BlQHhAa4BcAN4AesBwQFwAeMBvAF0AZ4BkAR1A3QDcgNw
        A90GAAH2AvUB8gHwAu0B6QHlAeYB4AHcAeIB2gHVAd8B1wHSAd8B1wHSAeAB2QHTAdEBxwHFAeEB2AHW
        AdsC0wP2A/oG+wP6A/MD6AP3igAB8AHqAdkB6gHOAY0B6QHBAXQB6AHFAZIDfQN6BnkDdwPfA84DcgPd
        DAAD9AP4A/cD9gHuAusB0wHJAcoB7QLqA/oB8wHwAfEB5AHeAd8B8gLwAfIB7wHwA7ADwAO+A98D+ZAA
        AfIB7AHgAfoB+QH4A4EDfgN9A3sDegOfA7EDdQPdDAAD9AP5A/gB9ALyAdsB0wHUAeUC4AH0AfIB8wP6
        A/sD+gHiAtwB3wHYAdkDngPvA+0D9pkAA+EG4A/fA/YMAAP0CfoG+wn8A/0D+wP0A5kD7wP3wwAD9AP6
        CfsG/Ab9A/sD9APkA+cD+f8AcgABQgFNAT4HAAE+AwABKAMAAVADAAEUAwABAQEAAQEFAAHwFwAD/wEA
        AYABAAEOCQABgAEAAQ4JAAGAAQABDgkAAYABAAEOCQABgAEAAQgJAAGAAQABCAkAAYABAAEICQABgAEA
        AQgJAAGAAQABCAkAAYABAAEICQABgAEAAQgJAAGAAQABCAkAAYABAAEICQABwAEAAQgJAAHgAQABGAkA
        AfwBAAEeCQAB/wEAAR4BAAEBBwAB/wHAAR4BAAEDBwAC/wH+AQABBwcABf8HAAs=
</value>
  </data>
</root>