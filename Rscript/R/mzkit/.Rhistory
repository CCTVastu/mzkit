library(mzkit)
setwd("S:/2019/Flavone/Flavone")
setwd("S:/2019/Flavone/Flavone")
require(mzkit)
read.mgf
read.mgf("./pos.mzcloud.mgf")
ions <- read.mgf("./pos.mzcloud.mgf")
names(ons)
names(ions)
length(ions)
ions[[1]]
Strings.Split
Strings.Replace()
Strings.Replace
Trim
Trim(" g  ")
Strings.Len
GetTagValue()
GetTagValue("a:b", ":")
GetTagValue
title <- '670425bc-832e-4558-8112-82f5882b3404 activation:"HCD", collisionEnergy:"30", name:"Methyl Palmitate", compound_class:"Excipients/Additives/Colorants", formula:"C17 H34 O2", mass:"270.25588033699", polarity:"1", mzcloud:"Autoprocessed-1912", rawfile:"pos.mzXML", precursor_type:"[M]+"'
title
parse.mgf.title_meta <- function(title) {
title_string <- Strings.Split(title, " ")[1];
title_meta <- Strings.Replace(title, title_string, "") %=>% Trim;
if (Strings.Len(title_meta) == 0) {
meta <- list();
} else {
title_meta <- Strings.Split(title_meta, '", ');
title_meta <- GetTagValue(title_meta, ":");
}
list(title_string = title_string, meta = title_meta);
}
parse.mgf.title_meta(title)
parse.mgf.title_meta(title)$meta
parse.mgf.title_meta <- function(title) {
title_string <- Strings.Split(title, " ")[1];
title_meta <- Strings.Replace(title, title_string, "") %=>% Trim;
if (Strings.Len(title_meta) == 0) {
meta <- list();
} else {
title_meta <- Strings.Split(title_meta, '", ');
title_meta <- GetTagValue(title_meta, ':"');
}
list(title_string = title_string, meta = title_meta);
}
parse.mgf.title_meta(title)$meta
GetTagValue
m<-parse.mgf.title_meta(title)$meta
names(m)
m[[1]]
m
parse.mgf.title_meta <- function(title) {
title_string <- Strings.Split(title, " ")[1];
title_meta <- Strings.Replace(title, title_string, "") %=>% Trim;
if (Strings.Len(title_meta) == 0) {
meta <- list();
} else {
title_meta <- Strings.Split(title_meta, '", ');
title_meta <- GetTagValue(title_meta, ':"');
meta <- list();
for(attr in title_meta) {
meta[[attr$name]] <- attr$value;
}
}
list(title_string = title_string, meta = meta);
}
m<-parse.mgf.title_meta(title)$meta
library(mzkit)
title <- '670425bc-832e-4558-8112-82f5882b3404 activation:"HCD", collisionEnergy:"30", name:"Methyl Palmitate", compound_class:"Excipients/Additives/Colorants", formula:"C17 H34 O2", mass:"270.25588033699", polarity:"1", mzcloud:"Autoprocessed-1912", rawfile:"pos.mzXML", precursor_type:"[M]+"'
title
m<-parse.mgf.title_meta(title)$meta
m
Trim
library(mzkit)
title <- '670425bc-832e-4558-8112-82f5882b3404 activation:"HCD", collisionEnergy:"30", name:"Methyl Palmitate", compound_class:"Excipients/Additives/Colorants", formula:"C17 H34 O2", mass:"270.25588033699", polarity:"1", mzcloud:"Autoprocessed-1912", rawfile:"pos.mzXML", precursor_type:"[M]+"'
m<-parse.mgf.title_meta(title)$meta
m
library(mzkit)
library(mzkit)
title <- '670425bc-832e-4558-8112-82f5882b3404 activation:"HCD", collisionEnergy:"30", name:"Methyl Palmitate", compound_class:"Excipients/Additives/Colorants", formula:"C17 H34 O2", mass:"270.25588033699", polarity:"1", mzcloud:"Autoprocessed-1912", rawfile:"pos.mzXML", precursor_type:"[M]+"'
m<-parse.mgf.title_meta(title)$meta
m
parse.mgf.title_meta
library(mzkit)
parse.mgf.title_meta
setwd("D:/MassSpectrum-toolkits/MetaDNA/mzkit")
library(mzkit)
library(mzkit)
parse.mgf.title_meta
library(mzkit)
parse.mgf.title_meta
title <- '670425bc-832e-4558-8112-82f5882b3404 activation:"HCD", collisionEnergy:"30", name:"Methyl Palmitate", compound_class:"Excipients/Additives/Colorants", formula:"C17 H34 O2", mass:"270.25588033699", polarity:"1", mzcloud:"Autoprocessed-1912", rawfile:"pos.mzXML", precursor_type:"[M]+"'
parse.mgf.title_meta(title)
setwd("S:/2019/Flavone/Flavone")
ions <- read.mgf("./neg.mzcloud.mgf")
ions[[1]]
ions <- read.mgf("./neg.samples.mgf")
ions[[1]]
library(mzkit)
ions <- read.mgf("./neg.samples.mgf")
names(ions)
ions <- read.mgf("./neg.mzcloud.mgf")
names(ions)
help(q)
q()
total_string_length <- function(x) {
n_chars <- sapply(x, nchar)
browser()
sum(n_chars)
}
total_string_length(list())
help(rownames)
help(names)
help("colnames")
help(do.call)
help(.Internal)
library(mzkit)
library(mzkit)
library(mzkit)
help(reduce)
pi
library(mzkit)
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
ions
profiles <- ions[[1]]$ms2;
profiles
profile <- ions[[1]]$ms2;
peakwidth = 0.3
angle.threshold = 5
if (!(c("mz", "into") %in% colnames(profile))) {
stop("Invalid prpfile spectra data matrix object!");
}
mz <- as.numeric(as.vector(profile[, "mz"]));
into <- as.numeric(as.vector(profile[, "into"]));
mz
into
order(mz)
mz[order(mz)]
i <- order(mz);
mz <- mz[i];
into <- into[i];
mz
into
accumulates <- peak.accumulateLine(into);
accumulates
windowSlices <- slide.windows(win_size = 2, step = 1, mz = mz, into = into);
windowSlices
str(windowSlices)
cmz   <- c();
cinto <- c();
bmz   <- c();
binto <- c();
slide = windowSlices[[1]]
slide
p1 <- c(slide$mz[1], slide$into[1]);
p2 <- c(slide$mz[2], slide$into[2]);
p1
p2
a <- angle(p1, p2);
a
a <= angle.threshold
if (is.null(bmz)) {
bmz <- slide$mz;
binto <- slide$into;
} else {
bmz <- append(bmz, slide$mz[2]);
binto <- append(binto, slide$into[2]);
}
cmz   <- c();
cinto <- c();
bmz   <- c();
binto <- c();
for(slide in windowSlices) {
p1 <- c(slide$mz[1], slide$into[1]);
p2 <- c(slide$mz[2], slide$into[2]);
a <- angle(p1, p2);
if (a <= angle.threshold) {
# we get a spectra peak
i <- which.max(binto);
cmz <- append(cmz, bmz[i]);
cinto <- append(cinto, binto[i]);
bmz   <- c();
binto <- c();
} else {
if (is.null(bmz)) {
bmz <- slide$mz;
binto <- slide$into;
} else {
bmz <- append(bmz, slide$mz[2]);
binto <- append(binto, slide$into[2]);
}
}
}
if (length(bmz) > 0) {
# we get a spectra peak
i <- which.max(binto);
cmz <- append(cmz, bmz[i]);
cinto <- append(cinto, binto[i]);
}
mz
into
p1
p2
xydiff <- p2 - p1;
xydiff
atan2
help(atan2)
a <- atan2(xydiff[2], xydiff[1]);
a
a <- a * 180 / pi;
a
180 - (a - 90);
a
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
profile <- ions[[1]]$ms2;
centroid.2(profile)
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
profile <- ions[[1]]$ms2;
centroid.2(profile)
mz <- as.numeric(as.vector(profile[, "mz"]));
into <- as.numeric(as.vector(profile[, "into"]));
# reorder in asc order
i <- order(mz);
mz <- mz[i];
into <- into[i];
accumulates <- peak.accumulateLine(into);
windowSlices <- slide.windows(win_size = 2, step = 1, mz = mz, into = into);
cmz   <- c();
cinto <- c();
bmz   <- c();
binto <- c();
slide = windowSlices[[1]]
slide
p1 <- c(slide$mz[1], slide$into[1]);
p2 <- c(slide$mz[2], slide$into[2]);
a <- angle(p1, p2);
a
(a <= angle.threshold)
if (is.null(bmz)) {
bmz <- slide$mz;
binto <- slide$into;
} else {
bmz <- append(bmz, slide$mz[2]);
binto <- append(binto, slide$into[2]);
}
slide = windowSlices[[2]]
slide
p1 <- c(slide$mz[1], slide$into[1]);
p2 <- c(slide$mz[2], slide$into[2]);
a <- angle(p1, p2);
a
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
profile <- ions[[1]]$ms2;
centroid.2(profile)
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
profile <- ions[[1]]$ms2;
centroid.2(profile)
centroid.2(profile, angle.threshold = 0.5)
centroid.2(profile, angle.threshold = 0.1)
centroid.2(profile, angle.threshold = 0.1)
library(mzkit)
ions <- read.mgf("D:/MassSpectrum-toolkits/DATA/test/HCD_profiles.txt");
profile <- ions[[1]]$ms2;
centroid.2(profile, angle.threshold = 0.1)
ms2 <- centroid.2(profile, angle.threshold = 0.1)
write.csv(ms2, file ="D:/MassSpectrum-toolkits/Rscript/demo/mz_centroid.R", row.names = FALSE);
write.csv(ms2, file ="D:/MassSpectrum-toolkits/Rscript/demo/mz_centroid.csv", row.names = FALSE);
