load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
names(lib.pos)
x <- lib.pos[[1]]
names(x)
x$metainfo
x$precursor_mz
x$spectra[[1]]
sapply(lib.pos, function(x) x$metainfo$name)
sapply(lib.pos, function(x) x$metainfo$name) %=>% as.vector
as.vector(sapply(lib.pos, function(x) x$metainfo$name) )
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
names(lib.pos)
lib.pos[[1]]
lib.pos[[2]]
lib.pos[[200]]
lib.pos[[205]]
lib.pos[[205]]$spectra
lib.pos[[205]]$precursor_mz
sapply(lib.pos, function(e) nrow(e$precursor_mz))
as.vector(sapply(lib.pos, function(e) nrow(e$precursor_mz)) )
n <- as.vector(sapply(lib.pos, function(e) nrow(e$precursor_mz)) )
n >= 1000
which(n >= 1000)
which(n >= 100)
which(n >= 50)
which(n >= 80)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 100)
lib.neg[[6303]]
lib.neg[[6303]]$precursor_mz
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 100)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 90)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 80)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 60)
which( as.vector(sapply(lib.neg, function(e) nrow(e$precursor_mz)) ) >= 70)
lib.neg[[530]]$precursor_mz
lib.neg[[531]]$precursor_mz
lib.neg[[532]]$precursor_mz
lib.neg[[539]]$precursor_mz
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/KEGG.metaDNA.rda")
View(KEGG.metaDNA)
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/KEGG.metaDNA.rda")
load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
x <- lib.pos[[1]]
x <- x[[1]]
x
x <- lib.pos[[1]]
names(x)
x$precursor_mz
x$metainfo
load("D:/Database/CID-Synonym-filtered/names/metlin.rda")
x <- lib.pos[[1]]
x$metainfo
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3+_standards-build.rda")
View(meta.db)
View(raw.pos)
View(raw.pos[["smartnucl-T3_POS_1_665raw.pos866-[M+H]+"]])
raw.pos[["smartnucl-T3_POS_1_665raw.pos866-[M+H]+"]]
raw.pos[[1]]
colnames(meta.db)
help("write.csv")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
View(raw.neg)
raw.neg[[1]]
View(meta.db)
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/package/sn_backups/T3-_standards-build.rda")
names(raw.neg)
names(raw.neg)[1000:length(raw.neg)]
raw.neg[[1300]]
raw.neg[[1200]]
raw.neg[[1100]]
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/sn_T3.rda")
load("D:/biodeep/biodeepDB/protocols/biodeepMSMS1/biodeepMSMS_v3/data/sn_T3.rda")
lib.pos[[1]]
names(lib.pos)
length(lib.pos)
load("D:/Database/CID-Synonym-filtered/names/sn_T3.rda")
length(lib.pos)
names(lib.pos)
lib.pos[[1]]
lib.pos[[10]]
lib.pos[[10]]$metainfo
load("D:/Database/CID-Synonym-filtered/names/MoNA.rda")
length(lib.pos[[1]]$spectra)
names(lib.pos[[1]]$spectra)
names(lib.pos[[2]]$spectra)
names(lib.pos[[200]]$spectra)
names(lib.pos[[200]]$spectra[[1]])
sapply(lib.pos[[200]]$spectra, function(s) s$platform)
sapply(lib.pos[[200]]$spectra, function(s) s$platform) %=>% as.vector
require(VisualBasic.R)
sapply(lib.pos[[200]]$spectra, function(s) s$platform) %=>% as.vector
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/data/metaDNA_kegg.rda")
view(network)
network
names(network)
network[[1]]
load("D:/MassSpectrum-toolkits/DATA/MetaDNA/MetaDNA/data/KEGG_meta.rda")
names(KEGG_meta)
KEGG_meta[[1]]
l <- list(a = 99, b = 888, c = T)
l
l[c(T,F,T)]
l <- list(a = list(x=99,y=F), b = 888, c = T)
l[c(T,F,T)]
library(MetaDNA)
library(MetaDNA)
tmp00pd8 <- list(id = "BioDeep_00008459", name = "Stearolic acid", exact_mass = 280.2402, formula = "C18H32O2", pos = tmp00pd2, neg = tmp00pd6, kegg = "C08459", hmdb = NULL, cas = "506-24-1", metlin = "24104", chebi = "CHEBI:28801", pubchem = "68167", mzCloud = "38c037de-cba3-4630-80c6-f0a172044e0d", Wikipedia = NULL, kingdom = NULL, super_class = NULL, class = "Endogenous Metabolites; Natural Products/Medicines", sub_class = NULL, molecular_framework = NULL, SMILES = "CCCCCCCCC#CCCCCCCCC(O)=O", source = "kegg", InChI = "InChI=1S/C18H32O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18(19)20/h2-8,11-17H2,1H3,(H,19,20)", InChIkey = "RGTIBVZDHOMOKC-UHFFFAOYSA-N");
tmp00pd8 <- list(id = "BioDeep_00008459", name = "Stearolic acid", exact_mass = 280.2402, formula = "C18H32O2", pos = tmp00pd2, neg = tmp00pd6, kegg = "C08459", hmdb = NULL, cas = "506-24-1", metlin = "24104", chebi = "CHEBI:28801", pubchem = "68167", mzCloud = "38c037de-cba3-4630-80c6-f0a172044e0d", Wikipedia = NULL, kingdom = NULL, super_class = NULL, class = "Endogenous Metabolites; Natural Products/Medicines", sub_class = NULL, molecular_framework = NULL, SMILES = "CCCCCCCCC#CCCCCCCCC(O)=O", source = "kegg", InChI = "InChI=1S/C18H32O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18(19)20/h2-8,11-17H2,1H3,(H,19,20)", InChIkey = "RGTIBVZDHOMOKC-UHFFFAOYSA-N");
tmp00pd2 = ""
tmp00pd8 <- list(id = "BioDeep_00008459", name = "Stearolic acid", exact_mass = 280.2402, formula = "C18H32O2", pos = tmp00pd2, neg = tmp00pd6, kegg = "C08459", hmdb = NULL, cas = "506-24-1", metlin = "24104", chebi = "CHEBI:28801", pubchem = "68167", mzCloud = "38c037de-cba3-4630-80c6-f0a172044e0d", Wikipedia = NULL, kingdom = NULL, super_class = NULL, class = "Endogenous Metabolites; Natural Products/Medicines", sub_class = NULL, molecular_framework = NULL, SMILES = "CCCCCCCCC#CCCCCCCCC(O)=O", source = "kegg", InChI = "InChI=1S/C18H32O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18(19)20/h2-8,11-17H2,1H3,(H,19,20)", InChIkey = "RGTIBVZDHOMOKC-UHFFFAOYSA-N");
tmp00pd6=""
tmp00pd8 <- list(id = "BioDeep_00008459", name = "Stearolic acid", exact_mass = 280.2402, formula = "C18H32O2", pos = tmp00pd2, neg = tmp00pd6, kegg = "C08459", hmdb = NULL, cas = "506-24-1", metlin = "24104", chebi = "CHEBI:28801", pubchem = "68167", mzCloud = "38c037de-cba3-4630-80c6-f0a172044e0d", Wikipedia = NULL, kingdom = NULL, super_class = NULL, class = "Endogenous Metabolites; Natural Products/Medicines", sub_class = NULL, molecular_framework = NULL, SMILES = "CCCCCCCCC#CCCCCCCCC(O)=O", source = "kegg", InChI = "InChI=1S/C18H32O2/c1-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17-18(19)20/h2-8,11-17H2,1H3,(H,19,20)", InChIkey = "RGTIBVZDHOMOKC-UHFFFAOYSA-N");
tmp00pd8
library(MetaDNA)
library(MetaDNA)
data("br08001")
ls()
br08001
help(assign)
kk <- c("ww","ss","dd","sss")
kk
lapply(kk, function(i)  555)
library(MetaDNA)
load("D:/MassSpectrum-toolkits/Rscript/R/MetaDNA/data/KEGG_brites.rda")
View(br08021)
View(br08007)
View(br08006)
View(br08005)
View(br08003)
View(br08002)
View(br08001)
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
head(table)
table.keggIndex <- table[, col] %=>% as.vector;
col = "KEGG"
table.keggIndex <- table[, col] %=>% as.vector;
table.keggIndex
flash_load("R")
brite_names <- KEGG.brites();
name = "*"
table.list <- brite_names;
xLoad("KEGG_brites.rda");
id =  names(table.list)[1]
id
brites <- get(id);
head(brites)
xLoad("KEGG_brites.rda");
brites <- get(id);
head(brites)
GroupBy(brites, "ID")
xLoad("KEGG_brites.rda");
brites <- get(id);
head(table)
rownames(table) <- table[, "ID"];
brites <- .as.list(brites, "ID");
.as.list
brites <- .as.list(brites);
sapply(brites, function(t) t$ID)
names(brites) <- sapply(brites, function(t) t$ID);
brite_names
empty <- rep("NULL", length(brites[[1]]));
empty
append.brites <- NULL;
for(key in table.keggIndex) {
r <- brites[[key]];
if (is.null(r)) {
append.brites <- rbind(append.brites, empty);
} else {
append.brites <- rbind(append.brites, r);
}
}
append.brites
head(append.brites)
cols <- colnames(append.brites);
cols <- sprintf("[%s].%s", brite_names[[id]], cols);
colnames(append.brites) <- cols;
head(append.brites)
table <- cbind(table, append.brites);
rownames(append.brites) <- NULL;
table <- cbind(table, append.brites);
library(MetaDNA)
library(MetaDNA)
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\mzCloudPlants\MetaCluster\DD2019041513001-茶树\doMSMSalignment.report1_kegg_class.csv", row.names = F)
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
head(table)
write.csv()
write.csv
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
colnames(table)
head(table)
view(table)
View(table)
colnames(table)
table[,"[Compounds with biological roles].ID"]
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
table[,"[Compounds with biological roles].ID"]
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
View(br08009)
View(br08007)
View(br08002)
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
View(br08009)
flash_load("R")
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\DD2019041513001-茶树\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
install.packages("xlsx")
flash_load("R")
flash_load("R")
table = read.csv(""S:\\mzCloudPlants\\MetaCluster\\HT2019052412001-藜麦穗\\doMSMSalignment.report1.csv"");
table = read.csv("S:\\mzCloudPlants\\MetaCluster\\HT2019052412001-藜麦穗\\doMSMSalignment.report1.csv");
table = append.KEGG_brite(table )
write.csv(table, file = "S:\\mzCloudPlants\\MetaCluster\\HT2019052412001-藜麦穗\\doMSMSalignment.report1_kegg_class.csv", row.names = F)
